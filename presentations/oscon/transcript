                Slide: Orbited (Michael Carter and Jacob Rus)

M: Hi, my name is Michael Carter. I'm the founder of the Orbited project which I've been working on for two years. Orbited is an MIT licensed Comet server built for scalability and integration.

J: And I'm Jacob Rus. I've been working with Michael on Orbited for about a year and a half.  And I'm going to tell you about some exciting recent developments in Orbited that might change your lives forever.

M: So, to start us off I'd like to ask a question. How many of you in this room have used Comet in your applications?

    (hands raise)

                Slide: many responses to a single request

M: Ok, so this talk should help those of you with your hands up as well as your hands down. Just to make sure we're all on the same page, how about a definition? Comet is (TODO)

J: Wait a second, Michael.  That sounds an awful lot like a socket. You know, TCP? Full-duplex: Bi-directional communication between the client and server...

                Slide: TCP

J: How many of you have used TCP sockets in your applications?

    (hands raise)

J: All network programming for decades has been written on top of the same straight-forward abstraction.  We have a bi-directional communication channel, where each end has a write function for sending data, and a way to attach callbacks for reading data written at the other end.

                Slide: Flash/Java sockets with an X through them

M: Well, no, its not a socket. Sockets don't work on the web. We have had sockets in Flash and Java for a long time, but they suffer a show-stopping problem. That is, they don't interoperate over routers and firewalls. You can't deploy an application that will fail on at any school, government, or corporate office.

J: Ok then.  If it's not a socket, what *is* the architecture of Comet?

M: We already know about a typical web application deployment. You have your web framework (TODO)

                Slide: 
